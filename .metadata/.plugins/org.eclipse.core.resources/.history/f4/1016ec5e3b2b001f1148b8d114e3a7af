package com.grocery.model;

import jakarta.persistence.*;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Entity
@AllArgsConstructor
@NoArgsConstructor
@Data
public class ProductItem {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "product_item_id")
    private Long productItemId;

    @Column(name = "mrp")
    private Long mrp;

    @Column(name = "discounted_price")
    private Long discountedPrice;

    @Column(name = "qty_in_stock")
    private int qtyInStock;

    @ManyToOne
    @JoinColumn(name = "product_id")
    private Product product;

    @ManyToOne
    @JoinColumn(name = "unit_id")
    private Units unit;

    @PostRemove
    public void checkAndRemoveProductIfNoItemsLeft() {
        if (product != null && product.getProductItems().isEmpty()) {
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("com.grocery");
            EntityManager em = emf.createEntityManager();
            em.getTransaction().begin();
            Product productEntity = em.find(Product.class, product.getProdId());
            em.remove(productEntity);
            em.getTransaction().commit();
            em.close();
            emf.close();
        }
    }
}
