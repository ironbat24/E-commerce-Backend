package com.grocery.service;

import com.grocery.dto.CategoryDTO;
import com.grocery.model.Category;
import com.grocery.repository.CategoryRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

@Service
public class CategoryService {

    @Autowired
    private CategoryRepository categoryRepository;

    public CategoryDTO saveCategory(CategoryDTO categoryDTO) {
        Category category = convertToEntity(categoryDTO);
        Category savedCategory = categoryRepository.save(category);
        return convertToDTO(savedCategory);
    }

    public Optional<Category> findByName(String name) {
        return categoryRepository.findByName(name);
    }

    public CategoryDTO findById(Long id) {
        return categoryRepository.findById(id).map(this::convertToDTO).orElse(null);
    }

    CategoryDTO convertToDTO(Category category) {
        CategoryDTO dto = new CategoryDTO();
        dto.setId(category.getId());
        dto.setName(category.getName());
        if (category.getParentCategory() != null) {
            dto.setParentCategory(convertToDTO(category.getParentCategory()));
        }
        return dto;
    }

    private Category convertToEntity(CategoryDTO categoryDTO) {
        Category category = new Category();
        category.setId(categoryDTO.getId());
        category.setName(categoryDTO.getName());
        if (categoryDTO.getParentCategory() != null) {
            category.setParentCategory(convertToEntity(categoryDTO.getParentCategory()));
        }
        return category;
    }
}
