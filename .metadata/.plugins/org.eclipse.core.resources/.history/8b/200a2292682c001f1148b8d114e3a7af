package com.grocery.controller;

import com.grocery.dto.CategoryDTO;
import com.grocery.dto.ProductDTO;
import com.grocery.dto.ProductItemDTO;
import com.grocery.service.CategoryService;
import com.grocery.service.ProductItemService;
import com.grocery.service.ProductService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api")
public class GroceryController {

    @Autowired
    private CategoryService categoryService;

    @Autowired
    private ProductService productService;

    @Autowired
    private ProductItemService productItemService;

    // Category Endpoints

    @GetMapping("/categories")
    public List<CategoryDTO> getAllCategories() {
        return categoryService.findAllCategories();
    }

    @PostMapping("/categories")
    public ResponseEntity<CategoryDTO> createCategory(@RequestBody CategoryDTO categoryDTO) {
        CategoryDTO createdCategory = categoryService.saveCategory(categoryDTO);
        return ResponseEntity.ok(createdCategory);
    }

    @GetMapping("/categories/{id}")
    public ResponseEntity<CategoryDTO> getCategoryById(@PathVariable Long id) {
        CategoryDTO categoryDTO = categoryService.findById(id);
        return categoryDTO != null ? ResponseEntity.ok(categoryDTO) : ResponseEntity.notFound().build();
    }

    @DeleteMapping("/categories/{id}")
    public ResponseEntity<Void> deleteCategory(@PathVariable Long id) {
        categoryService.deleteCategory(id);
        return ResponseEntity.noContent().build();
    }

    // Product Endpoints

    @GetMapping("/products")
    public List<ProductDTO> getAllProducts() {
        return productService.findAllProducts();
    }

    @PostMapping("/products")
    public ResponseEntity<ProductDTO> createProduct(@RequestBody ProductDTO productDTO) {
        ProductDTO createdProduct = productService.saveProduct(productDTO);
        return ResponseEntity.ok(createdProduct);
    }

    @GetMapping("/products/{id}")
    public ResponseEntity<ProductDTO> getProductById(@PathVariable Long id) {
        ProductDTO productDTO = productService.findById(id);
        return productDTO != null ? ResponseEntity.ok(productDTO) : ResponseEntity.notFound().build();
    }

    @DeleteMapping("/products/{id}")
    public ResponseEntity<Void> deleteProduct(@PathVariable Long id) {
        productService.deleteProduct(id);
        return ResponseEntity.noContent().build();
    }

    // Product Item Endpoints

    @GetMapping("/productItems")
    public List<ProductItemDTO> getAllProductItems() {
        return productItemService.findAllProductItems();
    }

    @PostMapping("/productItems")
    public ResponseEntity<ProductItemDTO> createProductItem(@RequestBody ProductItemDTO productItemDTO) {
        ProductItemDTO createdProductItem = productItemService.saveProductItem(productItemDTO);
        return ResponseEntity.ok(createdProductItem);
    }

    @GetMapping("/productItems/{id}")
    public ResponseEntity<ProductItemDTO> getProductItemById(@PathVariable Long id) {
        ProductItemDTO productItemDTO = productItemService.findById(id);
        return productItemDTO != null ? ResponseEntity.ok(productItemDTO) : ResponseEntity.notFound().build();
    }

    @DeleteMapping("/productItems/{id}")
    public ResponseEntity<Void> deleteProductItem(@PathVariable Long id) {
        productItemService.deleteProductItem(id);
        return ResponseEntity.noContent().build();
    }
}
